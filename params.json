{
  "name": "Guide: 2fa Command Line Authentication",
  "tagline": "A way to authenticate on GitHub at the command line with 2fa enabled",
  "body": "# 2fa Command Line Authentication\r\n\r\nIf you have 2fa ([2 factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/)) enabled on GitHub you can't use your password to authenticate at the command line on Linux.\r\n\r\nAfter a while I found a solution that suits for me:\r\n\r\n## Steps\r\n\r\n**1.** Create an **access token** for command-line use. See: https://help.github.com/articles/creating-an-access-token-for-command-line-use/\r\n\r\n**2.** Create the `~/.netrc` file. It should look like:\r\n\r\n```\r\nmachine github.com\r\nlogin username\r\npassword YOUR_TOKEN\r\nprotocol https\r\n\r\nmachine gist.github.com\r\nlogin username\r\npassword YOUR_TOKEN\r\nprotocol https\r\n```\r\nwith `YOUR_TOKEN` created in the previous step.\r\n\r\nMore about `.netrc` file: `man 5 netrc`\r\n\r\n**3.** Encrypt `.netrc` file.\r\n\r\n```shell\r\n# Generate key\r\ngpg --gen-key\r\n# Encrypt file with this key\r\ngpg -r <user-id-key> -e .netrc\r\n# Give appropiate permissions\r\nchmod 400 ~/.netrc.gpg\r\n# Remove original file\r\nrm ~/.netrc\r\n```\r\n\r\nThis generates a `.netrc.gpg` file.\r\n\r\n**4.** Make available the git credential helper:\r\n\r\n```shell\r\n# Put the script somewhere in PATH\r\nsudo cp /usr/share/doc/git/contrib/credential/netrc/git-credential-netrc /usr/local/bin/\r\n# Mark it as executable\r\nsudo chmod +x /usr/local/bin/git-credential-netrc\r\n# Set Git configuration value\r\ngit config --global credential.helper netrc\r\n```\r\n\r\n**NOTE**: You can set two git credential helpers. This way you can combine with `git-credential-cache` and temporarily store authentication in memory. You have to declare the helpers in an specific order and your `~/.gitconfig` file should look like this:\r\n\r\n```\r\n[credential]\r\n  helper = cache --timeout 7200\r\n  helper = netrc\r\n```\r\n\r\n### More sources\r\n\r\n- https://git-scm.com/book/es/v2/Git-Tools-Credential-Storage\r\n- https://git-scm.com/docs/git-credential-cache\r\n\r\n## Future work: Custom Credential Tool\r\n\r\nIt could be interesting to develop a credential helper.\r\n\r\n## Contribution\r\n\r\nPRs and reporting issues are welcome.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}